/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

import { render, cleanUp } from '../test-utils';
import Icon from './icon';

{{#each this}}
import {{this.componentName}} from './{{this.category}}/{{this.name}}';
{{/each}}

describe('icon', () => {
    afterEach(cleanUp);

    it('renders without problems', () => {
        let icon = render(<Icon />);
        expect(icon.node).to.have.exist;
    });

    (() => {
        let icons = [
        {{#each this}}
            { componentName: {{this.componentName}}, name: '{{this.name}}' }{{#unless @last }},{{/unless}}
        {{/each}}
        ];

        return icons.map((icon, index) => (
            it(`render ${icon.componentName.name} without problems`, () => {
                let CurrentComponent = icons[index].componentName;
                let renderedIcon = render(<CurrentComponent />);
                expect(renderedIcon.node).to.have.class(`icon_name_${icon.name}`);
            })
        ));
    })();
});
